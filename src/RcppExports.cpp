// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MaxMin
NumericMatrix MaxMin(NumericMatrix A, NumericMatrix B);
RcppExport SEXP _pkcpp_MaxMin(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(MaxMin(A, B));
    return rcpp_result_gen;
END_RCPP
}
// MxM
NumericMatrix MxM(NumericMatrix A, NumericMatrix B);
RcppExport SEXP _pkcpp_MxM(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(MxM(A, B));
    return rcpp_result_gen;
END_RCPP
}
// SearchMax
DataFrame SearchMax(NumericMatrix x);
RcppExport SEXP _pkcpp_SearchMax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(SearchMax(x));
    return rcpp_result_gen;
END_RCPP
}
// SearchMin
DataFrame SearchMin(NumericMatrix x);
RcppExport SEXP _pkcpp_SearchMin(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(SearchMin(x));
    return rcpp_result_gen;
END_RCPP
}
// addC
NumericMatrix addC(NumericMatrix A, NumericVector x);
RcppExport SEXP _pkcpp_addC(SEXP ASEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(addC(A, x));
    return rcpp_result_gen;
END_RCPP
}
// addR
NumericMatrix addR(NumericMatrix A, NumericVector x);
RcppExport SEXP _pkcpp_addR(SEXP ASEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(addR(A, x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pkcpp_MaxMin", (DL_FUNC) &_pkcpp_MaxMin, 2},
    {"_pkcpp_MxM", (DL_FUNC) &_pkcpp_MxM, 2},
    {"_pkcpp_SearchMax", (DL_FUNC) &_pkcpp_SearchMax, 1},
    {"_pkcpp_SearchMin", (DL_FUNC) &_pkcpp_SearchMin, 1},
    {"_pkcpp_addC", (DL_FUNC) &_pkcpp_addC, 2},
    {"_pkcpp_addR", (DL_FUNC) &_pkcpp_addR, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_pkcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
