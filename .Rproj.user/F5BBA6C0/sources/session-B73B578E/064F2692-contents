// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MaxMin_rcpp
NumericMatrix MaxMin_rcpp(NumericMatrix A, NumericMatrix B);
RcppExport SEXP _pkcpp_MaxMin_rcpp(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(MaxMin_rcpp(A, B));
    return rcpp_result_gen;
END_RCPP
}
// MxM
NumericMatrix MxM(NumericMatrix A, NumericMatrix B);
RcppExport SEXP _pkcpp_MxM(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(MxM(A, B));
    return rcpp_result_gen;
END_RCPP
}
// SearchMax
DataFrame SearchMax(NumericMatrix x);
RcppExport SEXP _pkcpp_SearchMax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(SearchMax(x));
    return rcpp_result_gen;
END_RCPP
}
// SearchMin_Rcpp
DataFrame SearchMin_Rcpp(NumericMatrix x);
RcppExport SEXP _pkcpp_SearchMin_Rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(SearchMin_Rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// addColumn_rcpp
NumericMatrix addColumn_rcpp(NumericMatrix A, NumericVector x);
RcppExport SEXP _pkcpp_addColumn_rcpp(SEXP ASEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(addColumn_rcpp(A, x));
    return rcpp_result_gen;
END_RCPP
}
// addRow_rcpp
NumericMatrix addRow_rcpp(NumericMatrix A, NumericVector x);
RcppExport SEXP _pkcpp_addRow_rcpp(SEXP ASEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(addRow_rcpp(A, x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _pkcpp_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pkcpp_MaxMin_rcpp", (DL_FUNC) &_pkcpp_MaxMin_rcpp, 2},
    {"_pkcpp_MxM", (DL_FUNC) &_pkcpp_MxM, 2},
    {"_pkcpp_SearchMax", (DL_FUNC) &_pkcpp_SearchMax, 1},
    {"_pkcpp_SearchMin_Rcpp", (DL_FUNC) &_pkcpp_SearchMin_Rcpp, 1},
    {"_pkcpp_addColumn_rcpp", (DL_FUNC) &_pkcpp_addColumn_rcpp, 2},
    {"_pkcpp_addRow_rcpp", (DL_FUNC) &_pkcpp_addRow_rcpp, 2},
    {"_pkcpp_rcpp_hello_world", (DL_FUNC) &_pkcpp_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_pkcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
